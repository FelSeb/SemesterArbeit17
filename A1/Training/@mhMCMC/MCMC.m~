classdef MCMC
    %MCMC Summary of this class goes here
    %   Detailed explanation goes here
    
    properties
        Proposer
        
        Logtarget
        
        N_MC_samples
    end
    
    methods
        % Constructor
        function this = MCMC(proposer, logtarget)
            this.Proposer = proposer;
            
            this.Logtarget = logtarget;
            
            this.N_MC_samples = n_mc_samples;
        end
        
        % Metropolis hastings algorithm
        [smpl,accept] = MYmhsample(start,nsamples,varargin)
        
        function this = resetDensities(this, proprnd, logtarget)
            
        end
        
        
        function rho = estimateAutoCovariance(all_X,jfrac)
            [nsamples,ndim] = size(all_X);
            
            % sample mean
            mu_hat = mean(all_X,1);
            
            % sample covariance
            Sigma_hat = 0;
            for n = 1:nsamples
                Sigma_hat = Sigma_hat + (all_X(n,:)-mu_hat).^2;
            end
            Sigma_hat = Sigma_hat/nsamples;
            
            nj = ceil(nsamples*jfrac);
            rho = zeros(nj+1,ndim);
            for j = 0:nj
                for n = 1:nsamples-j
                    rho(j+1,:) = rho(j+1,:) + (all_X(n,:)-mu_hat).*(all_X(n+j,:)-mu_hat);
                end
                rho(j+1,:) = 1/(nsamples-j)*rho(j+1,:)./Sigma_hat;
            end
            figure;
            plot(rho);
            % figure;
            % plot(all_X);
            % figure
            % plot(cummean(all_X))
            
        end
        
        
        function samples = generateSamples()
            [smpl,accept] = MYmhsample(init,this.N_MC_samples,...
                'logpdf',LOGPDF,...
                'logproppdf',LOGPROPPDF,'proprnd',PROPRND,...
                'returninfo',1);
        end
    end
    
end

